[2021-09-03 03:21:03,857] {processor.py:162} INFO - Started process (PID=182) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:21:03,858] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:21:03,859] {logging_mixin.py:109} INFO - [2021-09-03 03:21:03,858] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:21:03,883] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:21:03,901] {logging_mixin.py:109} INFO - [2021-09-03 03:21:03,901] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:21:03,915] {logging_mixin.py:109} INFO - [2021-09-03 03:21:03,915] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:21:03,922] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.067 seconds
[2021-09-03 03:21:34,026] {processor.py:162} INFO - Started process (PID=255) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:21:34,026] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:21:34,027] {logging_mixin.py:109} INFO - [2021-09-03 03:21:34,027] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:21:34,050] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:21:34,069] {logging_mixin.py:109} INFO - [2021-09-03 03:21:34,069] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:21:34,083] {logging_mixin.py:109} INFO - [2021-09-03 03:21:34,083] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:21:34,090] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.066 seconds
[2021-09-03 03:22:04,195] {processor.py:162} INFO - Started process (PID=278) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:22:04,195] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:22:04,196] {logging_mixin.py:109} INFO - [2021-09-03 03:22:04,196] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:22:04,221] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:22:04,239] {logging_mixin.py:109} INFO - [2021-09-03 03:22:04,239] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:22:04,251] {logging_mixin.py:109} INFO - [2021-09-03 03:22:04,251] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:22:04,258] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.065 seconds
[2021-09-03 03:22:34,364] {processor.py:162} INFO - Started process (PID=298) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:22:34,365] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:22:34,366] {logging_mixin.py:109} INFO - [2021-09-03 03:22:34,366] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:22:34,391] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:22:34,411] {logging_mixin.py:109} INFO - [2021-09-03 03:22:34,411] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:22:34,426] {logging_mixin.py:109} INFO - [2021-09-03 03:22:34,425] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:22:34,440] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.079 seconds
[2021-09-03 03:23:04,529] {processor.py:162} INFO - Started process (PID=319) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:23:04,529] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:23:04,530] {logging_mixin.py:109} INFO - [2021-09-03 03:23:04,530] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:23:04,549] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:23:04,562] {logging_mixin.py:109} INFO - [2021-09-03 03:23:04,562] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:23:04,572] {logging_mixin.py:109} INFO - [2021-09-03 03:23:04,572] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:23:04,577] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.051 seconds
[2021-09-03 03:23:34,663] {processor.py:162} INFO - Started process (PID=341) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:23:34,664] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:23:34,665] {logging_mixin.py:109} INFO - [2021-09-03 03:23:34,664] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:23:34,679] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:23:34,693] {logging_mixin.py:109} INFO - [2021-09-03 03:23:34,693] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:23:34,703] {logging_mixin.py:109} INFO - [2021-09-03 03:23:34,703] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:23:34,710] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.049 seconds
[2021-09-03 03:24:04,825] {processor.py:162} INFO - Started process (PID=361) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:24:04,826] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:24:04,826] {logging_mixin.py:109} INFO - [2021-09-03 03:24:04,826] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:24:04,853] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:24:04,870] {logging_mixin.py:109} INFO - [2021-09-03 03:24:04,870] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:24:04,882] {logging_mixin.py:109} INFO - [2021-09-03 03:24:04,882] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:24:04,887] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.066 seconds
[2021-09-03 03:24:34,999] {processor.py:162} INFO - Started process (PID=382) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:24:35,000] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:24:35,000] {logging_mixin.py:109} INFO - [2021-09-03 03:24:35,000] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:24:35,026] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:24:35,047] {logging_mixin.py:109} INFO - [2021-09-03 03:24:35,047] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:24:35,062] {logging_mixin.py:109} INFO - [2021-09-03 03:24:35,062] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:24:35,071] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.075 seconds
[2021-09-03 03:25:05,187] {processor.py:162} INFO - Started process (PID=403) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:25:05,188] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:25:05,189] {logging_mixin.py:109} INFO - [2021-09-03 03:25:05,189] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:25:05,215] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:25:05,235] {logging_mixin.py:109} INFO - [2021-09-03 03:25:05,235] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:25:05,250] {logging_mixin.py:109} INFO - [2021-09-03 03:25:05,250] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:25:05,258] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.075 seconds
[2021-09-03 03:25:35,366] {processor.py:162} INFO - Started process (PID=424) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:25:35,368] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:25:35,368] {logging_mixin.py:109} INFO - [2021-09-03 03:25:35,368] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:25:35,395] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:25:35,416] {logging_mixin.py:109} INFO - [2021-09-03 03:25:35,416] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:25:35,432] {logging_mixin.py:109} INFO - [2021-09-03 03:25:35,432] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:25:35,440] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.077 seconds
[2021-09-03 03:26:05,567] {processor.py:162} INFO - Started process (PID=445) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:26:05,568] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:26:05,568] {logging_mixin.py:109} INFO - [2021-09-03 03:26:05,568] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:26:05,594] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:26:05,614] {logging_mixin.py:109} INFO - [2021-09-03 03:26:05,614] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:26:05,629] {logging_mixin.py:109} INFO - [2021-09-03 03:26:05,629] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:26:05,637] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.074 seconds
[2021-09-03 03:26:35,750] {processor.py:162} INFO - Started process (PID=467) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:26:35,752] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:26:35,752] {logging_mixin.py:109} INFO - [2021-09-03 03:26:35,752] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:26:35,777] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:26:35,797] {logging_mixin.py:109} INFO - [2021-09-03 03:26:35,797] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:26:35,813] {logging_mixin.py:109} INFO - [2021-09-03 03:26:35,813] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:26:35,829] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.083 seconds
[2021-09-03 03:27:05,941] {processor.py:162} INFO - Started process (PID=488) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:27:05,942] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:27:05,943] {logging_mixin.py:109} INFO - [2021-09-03 03:27:05,943] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:27:05,969] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:27:05,988] {logging_mixin.py:109} INFO - [2021-09-03 03:27:05,988] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:27:06,003] {logging_mixin.py:109} INFO - [2021-09-03 03:27:06,003] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:27:06,012] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.074 seconds
[2021-09-03 03:27:36,106] {processor.py:162} INFO - Started process (PID=510) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:27:36,106] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:27:36,107] {logging_mixin.py:109} INFO - [2021-09-03 03:27:36,107] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:27:36,124] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:27:36,139] {logging_mixin.py:109} INFO - [2021-09-03 03:27:36,139] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:27:36,152] {logging_mixin.py:109} INFO - [2021-09-03 03:27:36,152] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:27:36,159] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.055 seconds
[2021-09-03 03:28:06,262] {processor.py:162} INFO - Started process (PID=530) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:28:06,263] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:28:06,263] {logging_mixin.py:109} INFO - [2021-09-03 03:28:06,263] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:28:06,278] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:28:06,295] {logging_mixin.py:109} INFO - [2021-09-03 03:28:06,295] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:28:06,310] {logging_mixin.py:109} INFO - [2021-09-03 03:28:06,310] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:28:06,318] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.058 seconds
[2021-09-03 03:28:36,426] {processor.py:162} INFO - Started process (PID=552) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:28:36,427] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:28:36,427] {logging_mixin.py:109} INFO - [2021-09-03 03:28:36,427] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:28:36,452] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:28:36,472] {logging_mixin.py:109} INFO - [2021-09-03 03:28:36,472] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:28:36,487] {logging_mixin.py:109} INFO - [2021-09-03 03:28:36,486] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:28:36,494] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.071 seconds
[2021-09-03 03:29:06,613] {processor.py:162} INFO - Started process (PID=573) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:29:06,614] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:29:06,614] {logging_mixin.py:109} INFO - [2021-09-03 03:29:06,614] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:29:06,638] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:29:06,658] {logging_mixin.py:109} INFO - [2021-09-03 03:29:06,657] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:29:06,673] {logging_mixin.py:109} INFO - [2021-09-03 03:29:06,673] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:29:06,681] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.072 seconds
[2021-09-03 03:29:36,787] {processor.py:162} INFO - Started process (PID=594) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:29:36,788] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 03:29:36,788] {logging_mixin.py:109} INFO - [2021-09-03 03:29:36,788] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:29:36,808] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 03:29:36,824] {logging_mixin.py:109} INFO - [2021-09-03 03:29:36,823] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 03:29:36,836] {logging_mixin.py:109} INFO - [2021-09-03 03:29:36,836] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 03:29:36,842] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.058 seconds
[2021-09-03 04:00:20,963] {processor.py:162} INFO - Started process (PID=332) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:00:20,964] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:00:20,964] {logging_mixin.py:109} INFO - [2021-09-03 04:00:20,964] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:00:20,978] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:00:20,991] {logging_mixin.py:109} INFO - [2021-09-03 04:00:20,991] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 04:00:21,000] {logging_mixin.py:109} INFO - [2021-09-03 04:00:20,999] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 04:00:21,005] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-03 04:00:52,496] {processor.py:162} INFO - Started process (PID=556) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:00:52,496] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:00:52,497] {logging_mixin.py:109} INFO - [2021-09-03 04:00:52,497] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:00:52,510] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:00:52,524] {logging_mixin.py:109} INFO - [2021-09-03 04:00:52,524] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 04:00:52,533] {logging_mixin.py:109} INFO - [2021-09-03 04:00:52,533] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 04:00:52,539] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.045 seconds
[2021-09-03 04:01:24,897] {processor.py:162} INFO - Started process (PID=177) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:01:24,898] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:01:24,898] {logging_mixin.py:109} INFO - [2021-09-03 04:01:24,898] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:01:24,914] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:01:24,926] {logging_mixin.py:109} INFO - [2021-09-03 04:01:24,926] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 04:01:24,935] {logging_mixin.py:109} INFO - [2021-09-03 04:01:24,935] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 04:01:24,941] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-03 04:01:55,057] {processor.py:162} INFO - Started process (PID=255) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:01:55,058] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:01:55,059] {logging_mixin.py:109} INFO - [2021-09-03 04:01:55,059] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:01:55,087] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:01:55,107] {logging_mixin.py:109} INFO - [2021-09-03 04:01:55,107] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 04:01:55,122] {logging_mixin.py:109} INFO - [2021-09-03 04:01:55,121] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 04:01:55,130] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.077 seconds
[2021-09-03 04:02:25,244] {processor.py:162} INFO - Started process (PID=277) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:02:25,246] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:02:25,247] {logging_mixin.py:109} INFO - [2021-09-03 04:02:25,246] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:02:25,276] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:02:25,299] {logging_mixin.py:109} INFO - [2021-09-03 04:02:25,299] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-03 04:02:25,313] {logging_mixin.py:109} INFO - [2021-09-03 04:02:25,313] {dag.py:2306} INFO - Setting next_dagrun for hello_world to None
[2021-09-03 04:02:25,322] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.082 seconds
[2021-09-03 04:02:55,448] {processor.py:162} INFO - Started process (PID=298) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:02:55,449] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:02:55,450] {logging_mixin.py:109} INFO - [2021-09-03 04:02:55,450] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:02:55,473] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:02:56,057] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-03 04:03:26,442] {processor.py:162} INFO - Started process (PID=319) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:03:26,443] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:03:26,444] {logging_mixin.py:109} INFO - [2021-09-03 04:03:26,443] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:03:26,472] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:03:27,845] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-03 04:03:57,941] {processor.py:162} INFO - Started process (PID=340) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:03:57,942] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:03:57,943] {logging_mixin.py:109} INFO - [2021-09-03 04:03:57,943] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:03:57,965] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:03:58,430] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-03 04:04:28,951] {processor.py:162} INFO - Started process (PID=362) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:04:28,952] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:04:28,953] {logging_mixin.py:109} INFO - [2021-09-03 04:04:28,953] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:04:28,976] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:04:29,205] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-03 04:04:59,708] {processor.py:162} INFO - Started process (PID=384) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:04:59,709] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:04:59,710] {logging_mixin.py:109} INFO - [2021-09-03 04:04:59,710] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:04:59,734] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:05:00,678] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-03 04:05:30,786] {processor.py:162} INFO - Started process (PID=405) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:05:30,786] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-03 04:05:30,787] {logging_mixin.py:109} INFO - [2021-09-03 04:05:30,787] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:05:30,802] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-03 04:05:31,029] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
